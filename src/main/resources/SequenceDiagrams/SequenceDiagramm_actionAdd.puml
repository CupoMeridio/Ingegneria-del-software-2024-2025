@startuml
actor Utente_registrato
participant ContactsbookViewController
participant AddViewController
participant "Contatto" as Contact
participant DuplicateContactViewController
participant Database

Utente_registrato -> ContactsbookViewController: actionAdd
activate ContactsbookViewController
ContactsbookViewController->AddViewController: setObservableList
activate AddViewController
AddViewController -> AddViewController: actionAdd
AddViewController -> Contact: new
activate Contact
Contact->Contact: new(txtName, txtSur)
opt Numero di telefono presente
    Contact -> Contact: addNumber
end
opt Email presente
    Contact -> Contact: addEmail
end
Contact --> AddViewController
deactivate Contact
AddViewController->AddViewController: contains

alt Contatto duplicato
    AddViewController -> DuplicateContactViewController
    activate DuplicateContactViewController
    DuplicateContactViewController-->AddViewController
    AddViewController->DuplicateContactViewController: getBoolean
    deactivate DuplicateContactViewController 
        alt true
            AddViewController->AddViewController:add
            AddViewController-->Database: insertContact
            activate Database
            loop 3
             Database -> Database: formattaOut
            end 
            Database -> Database: executeUpdate
            Database --> AddViewController
            deactivate Database
        else false
            AddViewController->AddViewController:show
        end
else Contatto non duplicato
AddViewController->AddViewController: add
AddViewController-->Database: insertContact
activate Database
            loop 3
             Database -> Database: formattaOut
            end 
            Database -> Database: executeUpdate
            Database --> AddViewController
            deactivate Database
end
deactivate Contact
AddViewController-->ContactsbookViewController
deactivate AddViewController
deactivate ContactsbookViewController
@enduml 